[[{"l":"Welcome"},{"l":"工具简介","p":["CVTE MUI 基础框图","MUI工具是一个用于设计和开发显示器OSD菜单的工具，使用CVTE域账号登录、包含MENU和LOGO两种设计模式、UI设计器界面、UI模拟器、图片编辑器、字库编辑器和开发助手等基本功能。","UI设计器界面提供了菜单设计、条目设计、布局设计和设计预览等功能，可对当前菜单进行新增、删除、编辑和位置尺寸调整等操作。","UI模拟器界面提供了对UI代码的模拟运行，提供不依赖实体平台快速开发和Debug OSD界面的能力","图片编辑器和字库编辑器则分别处理在OSD中显示的Icon图标和翻译表字符串及点阵字库。","如果您在使用MUI工具时遇到问题，请参考MUI开发文档或联系开发人员。"]},{"l":"资源获取","p":["工具下载链接： https://drive.cvte.com/p/DTtFbmkQxfsBGP6jHQ","运行环境： https://drive.cvte.com/p/DXMSKokQyq8BGJvcGw(.NET6.0 x86 桌面运行时)"]},{"l":"开发指南","p":["MUI 字库编辑器","MUI 图片编辑器","MUI 设计器","MUI 模拟器","开发流程及规范","常见问题及处理"]},{"l":"快速开始"}],[{"l":"MUI 字库编辑器","p":["字库编辑器主界面"]},{"l":"模块简介"},{"i":"工具栏-1","l":"**工具栏**（1）","p":["：选择创建 Nx16x18 或 12x18 点阵字库。","：字符转图片、方案字库转换等实用小工具","：编辑字库配置，设置不同字符集所使用的字体信息","：手动编辑/显示当前字符表","：预览当前字库代码","：将当前翻译及点阵字库保存为C文件"]},{"i":"翻译表加载-2","l":"**翻译表加载**（2）","p":["：加载一个翻译表（Excel文件），默认应放置在 osd_resource\\stringTable 目录下","：设置生成代码路径，默认应为 osd_resource 目录"]},{"i":"字符集及字形组过滤器-4","l":"**字符集及字形组过滤器**（4）","p":["仅用于过滤预览区显示的字符内容","：选择当前显示的字形组（G1-G5）","：选择当前显示的字符集（如下图）","字符集"]},{"i":"点阵预览-编辑区-5","l":"**点阵预览/编辑区**（5）","p":["预览当前选中字符的点阵内容","使能自定义字库创建后可以手动编辑点阵内容"]},{"i":"字符预览区-6","l":"**字符预览区**（6）","p":["预览在当前过滤条件下的字符表内容"]}],[{"l":"功能介绍及字库设置"}],[{"l":"Excel 翻译表制作"}],[{"l":"翻译表及字库导入流程"}],[{"l":"MUI 图片编辑器"}],[{"l":"MUI 设计器","p":["设计器主界面"]},{"l":"模块简介"},{"i":"工具栏-1","l":"**工具栏**（1）","p":["：打开一个*.mui工程文件","：创建一个新的mui工程文件及其目录结构","：刷新当前工程的资源，添加或删除翻译或图片资源后需要刷新","：保存当前工程，同时生成c语言代码","：导出当前工程为新的*.mui工程文件","：编辑当前工程的条目与参数值的映射关系","：选择当前的设计模式（E_MENU/E_LOGO）, 菜单模式和Logo模式主要是生成目录与c语言代码文件的区别","：包含了常用链接，检查更新等功能"]},{"i":"功能栏-2","l":"**功能栏**（2）","p":["：打开MUI模拟器","：打开图片资源编辑器","：打开字库资源编辑器","：打开开发指南文档"]},{"i":"菜单设计-menu-md-3","l":"**[菜单设计](menu.md)**（3）","p":["：管理菜单页面，编辑（画布尺寸、位置、及命名等）、添加、删除菜单页面等","：条目属性编辑"]},{"i":"设计预览-4","l":"**设计预览**（4）","p":["： 是否预览菜单页面内容","：是否预览菜单布局框架","：是否预览菜单页面Font网格","：预览菜单页面的缩放比例，默认Auto","：启用参考背景，将OSD设计图作为背景，用于布局位置参考，点击 选择图片"]},{"i":"布局设计-layout-md-5","l":"**[布局设计](layout.md)**（5）","p":["：管理菜单布局，编辑（布局名称、布局类型、布局大小、布局位置等）、添加、删除布局等"]}],[{"l":"MUI 菜单页面画布定义","p":["菜单列表操作区域 菜单编辑页面"]},{"l":"页面名词解释","p":["：用于当前菜单页面的资源条件编译控制","：菜单页面名称，用于在菜单列表中显示及条目命名前缀；例如：MAIN、INPUT、FACTORY等","：菜单页面在屏幕中的相对位置，单位为 像素，如果OSD位置可调，此项可忽略，由代码自定义","：菜单页面在屏幕中的宽高，单位为 FONT(12x18像素)","：菜单所处的物理 OSD ID，一般方案都会支持多个OSD用于支持多OSD页面同时显示（常见：如准星和游戏倒计时菜单）"]},{"l":"创建一个OSD页面","p":["选择菜单按钮 新增，创建一个新的界面","编辑页面信息：NAME、位置、W/H（画布大小），选择OSD_WIN后保存即可创建一个新的页面"]}],[{"i":"#","p":["This is a custom description for this page"]},{"l":"MUI 菜单页面布局设计指南","p":["布局列表 布局编辑器页面"]},{"l":"页面名词解释","p":["：为OSD条目内容提供绘制位置信息，包括 起始坐标、宽高及分组 情况等信息。","：布局名称，此名称将菜单列表的根节点，此布局下的所有条目都将挂在此根节点下","：条目中同一类内容的位置信息分在同一个布局组中；例如：一个条目根据需要通常由图片组、字符串组、Focus组等几个布局组来描述定义。","：当前布局所有位置的起始坐标是否固定，如果不固定则可以通过代码Api设定XY偏移，主要用于绘制包含条目跟随弹窗的菜单界面。","：主要指字符串or图片在选中布局位置内的水平对齐方式（左/中/右）","：用于描述当前布局组的功能作用，在条目属性编辑时可以通过此描述来快速选择需要的布局组， 条目属性中选择布局组时会以 en_pos_XXX_XXX_XXX（Group 描述） 呈现。","：主要用于动态列表组中重复性的布局信息，用于一个布局组中的位置索引。例如：某级菜单中每一页需显示5个条目，则定义Idx0~ 4，用于定义这5个条目的位置关系。","：具有可导航属性的条目显示位置多数通过动态列表组来描述，动态列表组中包含Idx0-IdxN，用于描述动态列表中每一项的位置信息。 勾选动态列表组后，Layout 列表中 Idx0-IdxN 后缀将自动隐藏，条目属性中选择布局组时 会以 en_pos_XXX_XXX_Dynamic 的名称呈现。","：使能参考背景，用于快速定义布局位置（需要设计器预览界面先加载参考背景图）"]},{"i":"布局拆分规则重要","l":"布局拆分规则(*重要)","p":["通过布局列表我们发现一个菜单页面由多个布局组组成，例如 BG（背景）、L1（一级菜单）、L2 (二级菜单) 等，如何将菜单页面拆分为多个布局组？ 可参考如下分配规则：","【动静分离】","显示/刷新固定内容的位置通常我们定义为 BG 布局；用于定义菜单页面主背景图片、页面Logo、按键导航提示、菜单状态提示等布局组。","显示/刷新动态内容的位置通常我们定义为 ITEM 或 L(n) 布局；用于定义页面各级动态刷新的菜单。","【减少重叠】","同一个布局中的多个布局组尽量减少重叠，方便后续维护快速定位到需要修改的布局。","对于简单的动态布局，通常将所有动态布局放在同一个布局中，例如：一级菜单、二级菜单、等都定义在一个 ITEM 布局中。","对于复杂的动态布局，同一级菜单布局结构可能无法共用，通常将动态布局分为多个布局，例如：一级菜单、二级菜单language、二级菜单info、等分别定义在 L1、L2_LANG、L2_INFO 布局中。","综合以上规则，通常一个菜单页面由两个布局组成（一动一静），复杂的OSD界面可能存在多个动态布局（例如操作复杂的主OSD界面），简单的OSD界面可能仅存在一个静态布局（例如提示框菜单）。"]},{"l":"创建一个布局","p":["点击布局列表左侧菜单按钮，选择 新增，创建一个新的界面","编辑布局页面信息，NAME、XY位置、宽高、对齐方式、布局组定义，布局组描述等内容","关闭布局编辑界面后即可创建一个新的布局"]}],[{"l":"MUI 菜单条目及其属性设计","p":["条目及其属性编辑界面"]},{"l":"界面及属性说明"},{"i":"条目常用操作-1","l":"**条目常用操作**（1）","p":["提供当前菜单条目的 新增、删除、编辑、复制、上下位置调整 功能","以布局为根节点进行条目的 增删改"]},{"i":"列表折叠及展开-2","l":"**列表折叠及展开**（2）","p":["菜单项列表的折叠与展开功能","菜单项列表根节点全部反选功能"]},{"i":"属性-基本信息-3","l":"**属性-基本信息**（3）","p":["：从当前菜单列表中选择一个条目进行编辑","：菜单项的名称ID，用于唯一标识一个条目;","：同菜单页面宏开关，用于当前条目的条件编译控制","：当前条目的父节点，用于构建菜单树结构，工具自动根据父节点的ID生成","条目ID命名规则：ID_ MenuName_ ItemName（自动全大写、同一个 Menu 下条目命名不允许重复）","MenuName 菜单名称，尽可能使用一个简短的单词描述，如： MAIN、 NAVI、 AIMPOINT、 MODE、 INPUT、 FACTORY、 HOTKEY 等等","ItemName 条目名称，需要能简短清晰表述当前条目的功能作用，一般建议使用两个单词组合，允许使用常见词汇缩写，如： BACKLIGHT_ADJ、 CONTRAST_ADJ、 INPUT_SEL 等等","条目开关宏仅在满足不同客户或机型需求时使用，需要在编辑框填写 #if 之后的内容","实际开关宏的定义及配置应在 CApp_MUI_Config.h 文件中"]},{"i":"属性-navigation-4","l":"**属性-Navigation**（4）","p":["：限制当前条目的子级菜单列表在布局上的最大显示条数，默认0表示无限制","：导航到前一级菜单的条目ID","：导航到后一级菜单的条目ID","：重置当前菜单项前后级导航条目ID","在按键ACT事件中会有 E_ACT_GOTO_NEXT、 E_ACT_GOTO_PREV 事件，页面逻辑文件进行 KeyHandle 处理时可根据条目预定的前后级关系进行跳转","特殊情况下，前后级关系跳转可能与菜单需求相关（不使用默认值），例如：进入下级菜单时首先选中后一级菜单的特定条目，此时需要根据实际情况在 KeyHandle 时自行选择要跳转的条目"]},{"i":"属性-keyevent-5","l":"**属性-KeyEvent**（5）","p":["：当前条目处于 Focused 状态时所响应的按键事件组；例如：在当前条目上执行导航操作时的响应","：当前条目处于 Selected 状态时所响应的按键事件组；例如：在当前条目上执行Adjust操作时的响应","：按键事件组管理，将MUI虚拟按键 VK_x 映射为实际的 E_ACT_xxx 事件处理；","按键事件组管理","编辑菜单条目前，应建立好按键事件组，用于配置所有条目的按键响应。","如下代码为按键事件在页面逻辑文件中的实现示例："]},{"i":"属性-function-6","l":"**属性-Function**（6）","p":["在MUI中，每个条目功能响应分为四种类型，使能每种功能都会生成对应功能枚举，需要在MUI页面逻辑文件中实现对应的处理函数并完成对功能枚举的响应：","：绘制当前条目的焦点样式， CApi_MUI_DrawItem 传入 E_FOCUS 调用 FuncSetFocus_xxx 函数执行焦点样式绘制；绘制区域由 Pos 指定","：绘制当前条目的值属性（Num、Str、Icon、自定义控件等）， CApi_MUI_DrawItem 传入 E_VALUE 调用 FuncDrawValue_xxx 函数执行值绘制；绘制区域由 Pos 指定","：执行当前条目的功能响应，统一由 CApi_MUI_ExecItemFunc 调用页面 FuncExec_xxx 函数执行功能响应；","：调整当前条目的功能响应，统一由 CApi_MUI_AdjustItemFunc 调用页面 FuncAdjust_xxx 函数执行功能响应；","FuncSetFocus_xxx、 FuncDrawValue_xxx、 FuncExec_xxx、 FuncAdjust_xxx 的 xxx 后缀表示菜单名","以下示例是 CRes_MUI_Menu_h 文件中由工具生成的函数声明，具体函数实现请自己在 osd_action 目录的页面逻辑文件中实现，如未定义则会造成编译链接失败！"]},{"i":"属性-content-7","l":"**属性-Content**（7）","p":["：当前条目需要显示的字符串名称， CApi_MUI_DrawItem 传入 E_TEXT 调用 CApi_MUI_ShowTableString 函数显示字符串；绘制区域由 Pos 指定","：当前条目的描述信息， CApi_MUI_DrawItem 传入 E_DESC 调用 CApi_MUI_ShowTableString 函数显示字符串；绘制区域由 Pos 指定","：当前条目的图标， CApi_MUI_DrawItem 传入 E_IMAGE 调用 CApi_MUI_DrawImage 函数显示图标；绘制区域由 Pos 指定","每个条目可能出于不同的需要，需切换不同状态下的显示内容，并非始终显示初始值；常见如：语言国家相关条目的状态图标，按键导航提示条目的字符串及图标都需要动态切换，相应的 Content 需使能 Dynamic 属性，由代码根据实际状态自定义 string、image；","以下 CallBack 函数定义定义在 CApp_MUI_Action.c 文件中，在绘制 Content 时，如果使能了 Dynamic 属性，则会调用 CApi_MUI_CallBack_GetDymXXX 函数来获取自定义内容； 返回值为 none 则使用工具定义的默认值；"]},{"l":"操作技巧"},{"l":"菜单或条目重命名","p":["工具中菜单或条目重命名无法关联到页面逻辑文件（.c/.h）中相关函数名、变量名、枚举名等名称的变更，会导致编译失败，菜单设计完成后请避免直接在工具中重命名！","条目重命名正确做法为使用代码编辑器对当前工程下所有文件进行批量搜索和替换，将所有相关名称进行统一修改，完成后重新打开 *.mui 工程文件，再进行菜单设计即可！"]},{"l":"条目列表设计","p":["同一级条目列表往往具有相似的功能及内容配置，因此建议先设计好一个条目作为模板，然后根据需要复制当前条目，并修改相关属性及内容配置即可！"]},{"l":"布局组选择","p":["绘制条目 Content/Focus/Value 时，需要选择合适的布局位置（ Pos）,为了避免位置混淆和方便后期维护，强烈建议在布局设计时定义好布局组描述！ 定义方法：详见 布局设计-页面名词解释-布局组描述（Group 描述）","下图括号中为布局组描述，这样我们就很清晰的知道当前内容需要绘制在哪个布局组中：","布局组描述"]}],[{"l":"参数映射设计指南","p":["参数映射 参数列表编辑"]},{"l":"基本介绍","p":["参数映射用于实现OSD功能与调节参数的关联，实现功能枚举、条目ID、参数枚举、字符串枚举之间的关系映射及定义，并提供相关操作API。","参数映射生成的资源代码位于： osd_resource/CRes_MUI_FunctionMap_c.inl","提供如下API，方便页面逻辑代码调用"]},{"l":"为什么要进行参数映射","p":["减少重复代码量，统一维护映射表及转换函数","学习了MUI的条目设计之后，我们知道所有的OSD功能响应是通过： FuncSetFocus_xxx、 FuncDrawValue_xxx、 FuncExec_xxx、 FuncAdjust_xxx 四个功能函数来完成的","这四个函数均传递 EnumFuncAction 功能枚举参数，如果没有参数映射，每个功能实际要调节/调用哪一个参数变量，每个变量值跟OSD条目或字符串显示之间的关联关系都需要自己在页面逻辑中指定，会引入大量的条件选择代码","参数映射模块将所有的参数与功能关联起来，统一提供功能枚举、条目ID、参数枚举、字符串枚举之间的关系映射的API转换函数","定义统一的 MUI参数枚举、 MUI标准值枚举；是MUI能够脱离平台代码在模拟器上运行的基础","MUI参数枚举：统一的参数枚举值 E_MUI_PARAM_XXX","MUI标准值枚举：参数的统一标准值 en_value_xxx","定义统一的 MUI标准值枚举 与 实际平台值 的转换API","整个 MUI 页面逻辑全部基于 MUI标准值枚举 运行，即MUI页面逻辑与平台代码解耦合","各方案实际功能响应时、数据存储时，需要将 MUI标准值枚举 与 实际平台值 互转","上述操作统一通过 CApi_FuncMap_Mui2VfpValue 与 CApi_FuncMap_Vfp2MuiValue 函数进行"]},{"l":"如何设计及使用参数映射","p":["首先在参数列表中添加相关的参数定义（用于生成MUI参数枚举和MUI标准值枚举）","在参数映射界面为需要的条目及功能添加参数映射关系","在OSD功能响应代码中通过 CApp_FuncMap_xxx API 获取并转换相关信息，使用示例代码如下："]}],[{"l":"MUI 模拟器"}],[{"l":"开发流程及规范","p":["** 待完善 **"]}],[{"l":"常见问题及处理","p":["** 待完善 **"]}]]